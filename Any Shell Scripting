
if_else(){
    echo "Enter your marks:"
    read marks
    if ! [[ $marks =~ ^[0-9]+$ ]]; then
        echo "Invalid input. Please enter a valid number."
        return
    fi
 
    if [ $marks -ge 70 ]; then
        echo "Your grade is A."
    elif [ $marks -ge 40 ]; then
        echo "Your grade is B."
    else
        echo "You are FAIL"
    fi
}
 
do_while_prime(){
    echo "Enter the maximum number up to which you want to print prime numbers:"
    read max_num
    if ! [[ $max_num =~ ^[0-9]+$ ]]; then
        echo "Invalid input. Please enter a valid number."
        return
    fi
 
    is_prime() {
        local num=$1
        if [ $num -le 1 ]; then
            return 1
        fi
        for (( i=2; i*i <= num; i++ )); do
            if [ $((num % i)) -eq 0 ]; then
                return 1
            fi
        done
        return 0
    }
 
    num=2
    while true
    do
        is_prime $num
        if [ $? -eq 0 ]; then
            echo "$num"
        fi
        num=$((num + 1))
        [ $num -gt $max_num ] && break
    done
}
 
until_loop_armstrong(){
    echo "Enter the number to check if it is an Armstrong number:"
    read num
    if ! [[ $num =~ ^[0-9]+$ ]]; then
        echo "Invalid input. Please enter a valid number."
        return
    fi
 
    is_armstrong() {
        local num=$1
        local sum=0
        local n=${#num}  # Number of digits
        local original=$num
 
        until [ $num -le 0 ]; do
            local digit=$((num % 10))
            sum=$((sum + digit**n))
            num=$((num / 10))
        done
 
        [ $sum -eq $original ]
    }
 
    if is_armstrong $num; then
        echo "$num is an Armstrong number."
    else
        echo "$num is not an Armstrong number."
    fi
}
 
for_loop_factorial(){
    echo "Enter the number to calculate its factorial:"
    read num
    if ! [[ $num =~ ^[0-9]+$ ]]; then
        echo "Invalid input. Please enter a valid number."
        return
    fi
 
    factorial=1
 
    for (( i=1; i<=num; i++ ))
    do
        factorial=$((factorial * i))
    done
 
    echo "The factorial of $num is $factorial"
}
 
while true; do
    echo "Enter your choice:"
    echo "1. if-else ladder example"
    echo "2. for loop factorial example"
    echo "3. do-while loop example"
    echo "4. check if a number is an Armstrong number using until loop"
    echo "5. exit"
    read choice
 
    case $choice in
        1) if_else;;
        2) for_loop_factorial;;
        3) do_while_prime;;
        4) until_loop_armstrong;;
        5) echo "Exiting..."; exit;;
        *) echo "Invalid input"
    esac
done


